import Head from "next/head";
import Link from "next/link";
import Header from "./components/header.js";
import CtaHead from "./components/cta.js";
import { useState } from "react";
import { connectToDatabase } from "../util/mongodb";
import MainAppPage from "./components/mainapppage.js";
export default function Home({ property }) {
  const pageHandler = () => {
    event.preventDefault();
    setPage(1);
  };
  const [page, setPage] = useState(0);
  return (
    <>
      <Head>
        <title>HDB App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="h-screen">
        <Header
          logout={() => {
            setPage(0);
          }}
        />
        <div class={`${page === 0 ? "block" : "hidden"}`}>
          {property?.map((p, idx) => (
            <p className="text-white" key={idx}>
              {p.username}
            </p>
          ))}{" "}
          test
          <CtaHead onClickChange={pageHandler} />
        </div>
        <div class={`${page === 1 ? "block" : "hidden"}`}>
          <MainAppPage property={property} />
        </div>
      </main>
    </>
  );
}

export async function getServerSideProps(context) {
  const { db } = await connectToDatabase();
  const data = await db.collection("carpark").find().toArray();
  const property = JSON.parse(JSON.stringify(data));
  // const properties = data.map((property) => {
  //   return {
  //     username: property.username,
  //     password: property.password,
  //   };
  // });
  return {
    props: {
      property,
    },
  };
}

// const isConnected = await client.isConnected();
// const data = await db.collection("carpark").find({}).toArray();

// const recommend = await db.collection("data").find({}).sort({ ESG: -1 }).limit(100).toArray();
// const recommendation = JSON.parse(JSON.stringify(recommend));

// const property = JSON.parse(JSON.stringify(data));
// const properties = property.sort(function (a, b) {
//   return compareStrings(a.Stock_Name, b.Stock_Name);
// });

// const leaderboard = await db
//   .collection("users")
//   .find()
//   .sort({ score: -1 })
//   .toArray();
// const leaders = JSON.parse(JSON.stringify(leaderboard));

// const report = await db.collection("reports").find({}).toArray();
// const reports = JSON.parse(JSON.stringify(report));

// const options = properties.map((property) => {
//   return {
//     value: property.Code,
//     label: property.Stock_Name,
//   };
// });
